{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\Web\\\\xampp\\\\htdocs\\\\la_nacion\\\\la_nacion\\\\1erEjercicio\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport BannerTop from '../components/BannerTop';\nimport SidebarRight from '../components/SidebarRight';\nimport SidebarMain from '../components/SidebarMain';\nimport ArticlesContext from \"../components/context/articlesContext\";\nimport { overrideCache } from '../lib/api';\nimport { API_URL } from '../lib/constants';\n\nvar indexPage = function indexPage(_ref) {\n  _s();\n\n  var articles = _ref.articles,\n      isServerRendered = _ref.isServerRendered;\n  useEffect(function () {\n    // When the page is server-rendered,\n    // we override the value in the client cache\n    if (isServerRendered) {\n      console.log('page dentro de effect');\n      overrideCache(API_URL, articles);\n    }\n  }, []);\n  return __jsx(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(BannerTop, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"lay-sidebar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(ArticlesContext.Provider, {\n    value: {\n      articles: articles\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, __jsx(SidebarMain, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  })), __jsx(SidebarRight, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })));\n}; //function que es llamada en cada request de la página. Solo será renderizada cuando esten los datos (mejor para el SEO)\n\n\n_s(indexPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport var __N_SSP = true;\nexport default indexPage;","map":{"version":3,"sources":["E:/Web/xampp/htdocs/la_nacion/la_nacion/1erEjercicio/pages/index.js"],"names":["React","useEffect","BannerTop","SidebarRight","SidebarMain","ArticlesContext","overrideCache","API_URL","indexPage","articles","isServerRendered","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,SAAsBC,aAAtB,QAA2C,YAA3C;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAoC;AAAA;;AAAA,MAAjCC,QAAiC,QAAjCA,QAAiC;AAAA,MAAvBC,gBAAuB,QAAvBA,gBAAuB;AAElDT,EAAAA,SAAS,CAAC,YAAM;AACZ;AACA;AACA,QAAIS,gBAAJ,EAAsB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAN,MAAAA,aAAa,CAACC,OAAD,EAAUE,QAAV,CAAb;AACD;AACF,GAPI,EAOF,EAPE,CAAT;AASA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAII;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEA,MAAAA,QAAQ,EAARA;AAAF,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAMI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAJJ,CADJ;AAgBH,CA3BD,C,CA6BA;;;GA7BMD,S;;;AAuCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport BannerTop from '../components/BannerTop'\r\nimport SidebarRight from '../components/SidebarRight'\r\nimport SidebarMain from '../components/SidebarMain'\r\nimport ArticlesContext from \"../components/context/articlesContext\";\r\nimport { getArticles, overrideCache } from '../lib/api'\r\nimport { API_URL } from '../lib/constants';\r\n\r\n\r\nconst indexPage = ({ articles, isServerRendered }) => {\r\n\r\n    useEffect(() => {\r\n        // When the page is server-rendered,\r\n        // we override the value in the client cache\r\n        if (isServerRendered) {\r\n            console.log('page dentro de effect')\r\n            overrideCache(API_URL, articles);\r\n          }\r\n        }, [])\r\n   \r\n    return (\r\n        <main>\r\n\r\n            <BannerTop />\r\n\r\n            <div className=\"lay-sidebar\">\r\n            \r\n                <ArticlesContext.Provider value={{ articles }}>\r\n                    <SidebarMain />\r\n                </ArticlesContext.Provider>\r\n\r\n                <SidebarRight />\r\n\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\n//function que es llamada en cada request de la página. Solo será renderizada cuando esten los datos (mejor para el SEO)\r\nexport async function getServerSideProps(context ) {\r\n    const articles = await getArticles();\r\n    const isServerRendered = !!context.req;\r\n    console.log('paso por get static prop ' + isServerRendered)\r\n    //const articles = await getArticles();\r\n    // Le envio a la página los articulos via props\r\n    return { props: { articles, isServerRendered } }\r\n}\r\n\r\nexport default indexPage"]},"metadata":{},"sourceType":"module"}