{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport ArticlesContext from '../components/context/articlesContext';\nimport TagItem from './TagItem';\n\nvar TagsMenu = function TagsMenu() {\n  //estado interno para evaluar si el componente ha sido montado o no para evitar dif entre server render y client render\n  var _useState = useState(false),\n      isMounted = _useState[0],\n      setIsMounted = _useState[1];\n\n  useEffect(function () {\n    setIsMounted(true);\n  }, []);\n  var context = useContext(ArticlesContext); //Creo un único array con todos los tags de cada artículo\n\n  var singleArray = context.articles.reduce(function (data, articulo) {\n    return data.concat(articulo.taxonomy.tags);\n  }, []); //Creo un objeto donde cada key-value representa un slug y la cantidad de repeticiones\n\n  var group = singleArray.reduce(function (data, tag) {\n    data[tag.slug] = data[tag.slug] ? {\n      'cantidad': data[tag.slug].cantidad + 1,\n      'tag': tag\n    } : {\n      'cantidad': 1,\n      'tag': tag\n    };\n    return data;\n  }, {}); //Obtengo los primeros 10 elementos de un array de tags ordenados de mayor a menor segun su cantidad de aparaciones\n\n  var tagsSorted = Object.keys(group).sort(function (a, b) {\n    return group[b].cantidad - group[a].cantidad;\n  }).map(function (slug) {\n    return group[slug];\n  }).slice(0, 10);\n\n  var renderTags = function renderTags(tags) {\n    return tags.map(function (item, i) {\n      return __jsx(TagItem, {\n        key: i,\n        slug: \"/tema/\".concat(item.tag.slug)\n      }, item.tag.text);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    id: \"\",\n    className: \"cont_tags com-secondary-tag hlp-marginBottom-20\"\n  }, //preguntar si el componente esta montado para renderizar correctamente los tags, sino habia inconsistencias\n  isMounted && renderTags(tagsSorted)));\n};\n\nexport default TagsMenu;","map":null,"metadata":{},"sourceType":"module"}