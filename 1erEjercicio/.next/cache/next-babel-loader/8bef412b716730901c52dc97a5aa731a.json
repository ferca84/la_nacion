{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web\\\\xampp\\\\htdocs\\\\la_nacion\\\\la_nacion\\\\1erEjercicio\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport SidebarMain from '../components/SidebarMain';\nimport ArticlesContext from \"../components/context/articlesContext\";\nimport { getArticles } from '../lib/api';\nimport Layout from '../components/Layout';\n\nconst indexPage = ({\n  articles\n}) => {\n  const {\n    0: expanded,\n    1: setExpanded\n  } = useState(false);\n  return __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, __jsx(ArticlesContext.Provider, {\n    value: {\n      articles,\n      expanded,\n      setExpanded\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, __jsx(SidebarMain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }))));\n}; //function que es llamada en cada request de la página. Solo será renderizada cuando esten los datos (mejor para el SEO)\n\n\nexport async function getStaticProps(context) {\n  //Hack: If this code is executing in client-side, just reload.\n  if (false) {\n    console.log('BROWSER');\n    history.go();\n  }\n\n  console.log('RENDER SERVIDOR: ' + JSON.stringify(context));\n  const articles = await getArticles(); // Le envio a la página los articulos via props\n\n  return {\n    props: {\n      articles\n    }\n  };\n}\nexport default indexPage;","map":{"version":3,"sources":["E:/Web/xampp/htdocs/la_nacion/la_nacion/1erEjercicio/pages/index.js"],"names":["React","useState","SidebarMain","ArticlesContext","getArticles","Layout","indexPage","articles","expanded","setExpanded","getStaticProps","context","console","log","history","go","JSON","stringify","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAEhC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,KAAD,CAAxC;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEM,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA;AAAtB,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ;AASH,CAbD,C,CAeA;;;AACA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AACA,aAAqB;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAC,IAAAA,OAAO,CAACC,EAAR;AACH;;AACDH,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBG,IAAI,CAACC,SAAL,CAAeN,OAAf,CAAlC;AACA,QAAMJ,QAAQ,GAAG,MAAMH,WAAW,EAAlC,CAP0C,CAQ1C;;AACA,SAAO;AAAEc,IAAAA,KAAK,EAAE;AAAEX,MAAAA;AAAF;AAAT,GAAP;AACH;AAED,eAAeD,SAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport SidebarMain from '../components/SidebarMain'\r\nimport ArticlesContext from \"../components/context/articlesContext\";\r\nimport { getArticles } from '../lib/api'\r\nimport Layout from '../components/Layout';\r\n\r\n\r\nconst indexPage = ({ articles }) => {\r\n\r\n    const [expanded, setExpanded] = useState(false)\r\n\r\n    return (\r\n        <main>\r\n            <Layout>\r\n                <ArticlesContext.Provider value={{ articles, expanded, setExpanded }}>\r\n                    <SidebarMain />\r\n                </ArticlesContext.Provider>\r\n            </Layout>\r\n        </main>\r\n    )\r\n}\r\n\r\n//function que es llamada en cada request de la página. Solo será renderizada cuando esten los datos (mejor para el SEO)\r\nexport async function getStaticProps(context) {\r\n    //Hack: If this code is executing in client-side, just reload.\r\n    if (process.browser) {\r\n        console.log('BROWSER')\r\n        history.go();\r\n    }\r\n    console.log('RENDER SERVIDOR: ' + JSON.stringify(context))\r\n    const articles = await getArticles();\r\n    // Le envio a la página los articulos via props\r\n    return { props: { articles } }\r\n}\r\n\r\nexport default indexPage"]},"metadata":{},"sourceType":"module"}