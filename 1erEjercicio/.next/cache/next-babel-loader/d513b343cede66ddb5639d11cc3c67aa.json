{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\Web\\\\xampp\\\\htdocs\\\\la_nacion\\\\la_nacion\\\\1erEjercicio\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport BannerTop from '../components/BannerTop';\nimport SidebarRight from '../components/SidebarRight';\nimport SidebarMain from '../components/SidebarMain';\nimport ArticlesContext from \"../components/context/articlesContext\";\n\nvar indexPage = function indexPage(_ref) {\n  _s();\n\n  var articles = _ref.articles;\n\n  var _useState = useState(false),\n      isMounted = _useState[0],\n      setIsMounted = _useState[1]; //estado interno para evaluar si el componente ha sido montado\n\n\n  useEffect(function () {\n    setIsMounted(true);\n  }, []);\n  return __jsx(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(BannerTop, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"lay-sidebar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, isMounted && __jsx(ArticlesContext.Provider, {\n    value: {\n      articles: articles\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, __jsx(SidebarMain, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  })), __jsx(SidebarRight, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  })));\n}; // Esta function es llamada en cada request de l página, y esta solo será renderizada cuando esten los datos (mejor para el SEO)\n\n\n_s(indexPage, \"h7njlszr1nxUzrk46zHyBTBrvgI=\");\n\nexport var __N_SSP = true;\nexport default indexPage;","map":{"version":3,"sources":["E:/Web/xampp/htdocs/la_nacion/la_nacion/1erEjercicio/pages/index.js"],"names":["React","useState","useEffect","BannerTop","SidebarRight","SidebarMain","ArticlesContext","indexPage","articles","isMounted","setIsMounted"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAEEP,QAAQ,CAAC,KAAD,CAFV;AAAA,MAEzBQ,SAFyB;AAAA,MAEdC,YAFc,iBAEiB;;;AAEjDR,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAII;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKD,SAAS,IACN,MAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAARA;AAAF,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHR,EAQI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAJJ,CADJ;AAkBH,CA1BD,C,CA4BA;;;GA5BMD,S;;;AAmCN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport BannerTop from '../components/BannerTop'\r\nimport SidebarRight from '../components/SidebarRight'\r\nimport SidebarMain from '../components/SidebarMain'\r\nimport ArticlesContext from \"../components/context/articlesContext\";\r\nimport { getArticles } from '../lib/api'\r\n\r\n\r\nconst indexPage = ({ articles }) => {\r\n\r\n    const [isMounted, setIsMounted] = useState(false)//estado interno para evaluar si el componente ha sido montado\r\n\r\n    useEffect(() => {\r\n        setIsMounted(true)\r\n    }, [])\r\n\r\n    return (\r\n        <main>\r\n\r\n            <BannerTop />\r\n\r\n            <div className=\"lay-sidebar\">\r\n\r\n                {isMounted &&\r\n                    <ArticlesContext.Provider value={{ articles }}>\r\n                        <SidebarMain />\r\n                    </ArticlesContext.Provider>\r\n                }\r\n\r\n                <SidebarRight />\r\n\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\n// Esta function es llamada en cada request de l página, y esta solo será renderizada cuando esten los datos (mejor para el SEO)\r\nexport async function getServerSideProps() {\r\n    const articles = await getArticles();\r\n    // Le envio a la página los articulos via props\r\n    return { props: { articles } }\r\n}\r\n\r\nexport default indexPage"]},"metadata":{},"sourceType":"module"}