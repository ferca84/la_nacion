{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport BannerTop from '../components/BannerTop';\nimport SidebarRight from '../components/SidebarRight';\nimport SidebarMain from '../components/SidebarMain';\nimport ArticlesContext from \"../components/context/articlesContext\";\nimport { getArticles } from '../lib/api';\n\nconst indexPage = ({\n  articles\n}) => {\n  //estado interno para evaluar si el componente ha sido montado o no para evitar dif entre server render y client render\n\n  /*const [isMounted, setIsMounted] = useState(false)\r\n    useEffect(() => {\r\n      setIsMounted(true)\r\n  }, [])*/\n  return __jsx(\"main\", null, __jsx(BannerTop, null), __jsx(\"div\", {\n    className: \"lay-sidebar\"\n  }, //preguntar si el componente esta montado para renderizar correctamente los tags, sino habia inconsistencias\n  //isMounted &&\n  __jsx(ArticlesContext.Provider, {\n    value: {\n      articles\n    }\n  }, __jsx(SidebarMain, null)), __jsx(SidebarRight, null)));\n}; //function que es llamada en cada request de la página. Solo será renderizada cuando esten los datos (mejor para el SEO)\n\n\nexport async function getStaticProps() {\n  const articles = await getArticles(); // Le envio a la página los articulos via props\n\n  return {\n    props: {\n      articles\n    }\n  };\n}\nexport default indexPage;","map":null,"metadata":{},"sourceType":"module"}